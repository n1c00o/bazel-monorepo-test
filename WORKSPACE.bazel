workspace(name = "n1c00o_bazel_monorepo_test")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# ---
# TOOLCHAIN: @rules_rust
# VERSION: 0.6.0
# LINK: https://github.com/bazelbuild/rules_rust
# ---

http_archive(
    name = "rules_rust",
    sha256 = "872b04538ca20dad94791c348623f079ba93daf274c1d57ae6bfe0930ec77f0d",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_rust/releases/download/0.6.0/rules_rust-v0.6.0.tar.gz",
        "https://github.com/bazelbuild/rules_rust/releases/download/0.6.0/rules_rust-v0.6.0.tar.gz",
    ],
)

load("@rules_rust//rust:repositories.bzl", "rules_rust_dependencies", "rust_register_toolchains")

rules_rust_dependencies()

rust_register_toolchains(edition = "2021")

load("@rules_rust//crate_universe:repositories.bzl", "crate_universe_dependencies")

crate_universe_dependencies()

load("@rules_rust//crate_universe:crates_deps.bzl", "crate_repositories")

crate_repositories()

load("@rules_rust//crate_universe:defs.bzl", "crates_repository")

crates_repository(
    name = "crate_index_cargo_workspace",
    cargo_config = "//:.cargo/config.toml",
    lockfile = "//:Cargo.Bazel.lock",
    manifests = [
        "//:Cargo.toml",
        "//web_server_rust:Cargo.toml",
        "//adder_rust:Cargo.toml",
        "//printer_rust:Cargo.toml",
    ],
    supported_platform_triples = [
        "x86_64-unknown-linux-gnu",
        "aarch64-unknown-linux-gnu",
        "wasm32-unknown-unknown",
        "wasm32-wasi",
    ],
)

load(
    "@crate_index_cargo_workspace//:defs.bzl",
    cargo_workspace_crate_repositories = "crate_repositories",
)

cargo_workspace_crate_repositories()

# TODO: see http://bazelbuild.github.io/rules_rust/rust_proto.html#customizing-dependencies to use Prost and Tonic
load("@rules_rust//proto:repositories.bzl", "rust_proto_repositories")

rust_proto_repositories()

load("@rules_rust//proto:transitive_repositories.bzl", "rust_proto_transitive_repositories")

rust_proto_transitive_repositories()

# ---
# TOOLCHAIN: @rules_proto
# VERSION: 4.1.1
# LINK: https://github.com/bazelbuild/rules_proto
# ---
http_archive(
    name = "rules_proto",
    sha256 = "e017528fd1c91c5a33f15493e3a398181a9e821a804eb7ff5acdd1d2d6c2b18d",
    strip_prefix = "rules_proto-4.0.0-3.20.0",
    urls = [
        "https://github.com/bazelbuild/rules_proto/archive/refs/tags/4.0.0-3.20.0.tar.gz",
    ],
)

load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")

rules_proto_dependencies()

rules_proto_toolchains()

"""
# We currently use a fork of @rules_proto_grpc from titanous (https://github.com/titanous/)  which uses `prost` and
# `tonic` for Protobuf and gRPC in Rust since they are maintained and production-ready.
# As of now, the merge request is a Draft.
# TODO: when rhe MR is merged, use official repo (release or commit hash)
# ---
# TOOLCHAIN: @rules_proto_grpc (fork)
# VERSION: 4.1.1 fork (draft) https://github.com/rules-proto-grpc/rules_proto_grpc/pull/202
# LINK: https://github.com/titanous/rules_proto_grpc
# ---
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

git_repository(
    name = "rules_proto_grpc",
    commit = "2de961f5f44bdb62d3a35de828c36e53ed9ddaf6",
    remote = "https://github.com/titanous/rules_proto_grpc.git",
    shallow_since = "1655402640 +0000",
)
"""

"""
# ---
# TOOLCHAIN: @rules_proto_grpc
# VERSION: 4.1.1
# LINK: https://github.com/rules-proto-grpc/rules_proto_grpc
# ---
http_archive(
    name = "rules_proto_grpc",
    sha256 = "507e38c8d95c7efa4f3b1c0595a8e8f139c885cb41a76cab7e20e4e67ae87731",
    strip_prefix = "rules_proto_grpc-4.1.1",
    urls = ["https://github.com/rules-proto-grpc/rules_proto_grpc/archive/4.1.1.tar.gz"],
)

load("@rules_proto_grpc//:repositories.bzl", "rules_proto_grpc_repos", "rules_proto_grpc_toolchains")

rules_proto_grpc_toolchains()

rules_proto_grpc_repos()

# languages support
# lang: rust -> https://rules-proto-grpc.com/en/latest/lang/rust.html
load("@rules_proto_grpc//rust:repositories.bzl", rules_proto_grpc_rust_repos = "rust_repos")
load("@com_github_grpc_grpc//bazel:grpc_deps.bzl", "grpc_deps")
load("@rules_rust//rust:repositories.bzl", "rust_repositories")

rules_proto_grpc_rust_repos()

grpc_deps()

rust_repositories()
"""
